'''
NumPy 切片和索引:
    ndarray对象的内容可以通过索引或切片来访问和修改，与 Python 中 list 的切片操作一样。
    ndarray 数组可以基于 0 - n 的下标进行索引，切片对象可以通过内置的 slice 函数，
    并设置 start, stop 及 step 参数进行，从原数组中切割出一个新数组。
'''

#实例1
import numpy as np

a = np.arange(10)
s = slice(2,7,2)   # 从索引 2 开始到索引 7 停止，间隔为2 （索引是列表的下标 从0开始）
print (a[s])
print('\n')

# 冒号 : 的解释：如果只放置一个参数，如 [2]，将返回与该索引相对应的单个元素。
    # 如果为 [2:]，表示从该索引开始以后的所有项都将被提取。
    # 如果使用了两个参数，如 [2:7]，那么则提取两个索引(不包括停止索引)之间的项。
a = np.arange(10)
b = a[2:7:2]   # 从索引 2 开始到索引 7 停止，间隔为 2
print(b)
print('\n')

a = np.arange(10)  # [0 1 2 3 4 5 6 7 8 9]
b = a[5]
print(b)
print('\n')

a = np.arange(10)
print(a[2:])
print('\n')

a = np.arange(10)  # [0 1 2 3 4 5 6 7 8 9]
print(a[2:5])
print('\n')

#多维数组同样适用
a = np.array([[1,2,3],[3,4,5],[4,5,6]])
print(a)
# 从某个索引处开始切割
print('从数组索引 a[1:] 处开始切割')
print(a[1:])
print('\n')

#...省略号 用于返回（...,num）中的num列后的数组 行数与元组长度相同
a = np.array([[1,2,3],[3,4,5],[4,5,6]])
print (a[...,1])   # 第2列元素 [2 4 5]
print (a[1,...])   # 第2行元素 [3 4 5]
print (a[...,1:])  # 第2列及剩下的所有元素 [[2 3]
                     #                      [4 5]
                         #                   [5 6]]
print(...,...) # Ellipsis Ellipsis 什么都没选 省略了